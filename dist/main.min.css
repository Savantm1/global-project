@charset "UTF-8";/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-.125rem}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}@font-face{font-family:Montserrat;src:url(fonts/Montserrat-Regular.woff);font-weight:400}@font-face{font-family:Montserrat;src:url(fonts/Montserrat-Black.woff);font-weight:600}@font-face{font-family:Montserrat;src:url(fonts/Montserrat-Bold.woff);font-weight:700}@font-face{font-family:Montserrat;src:url(fonts/Montserrat-Light.woff);font-weight:400}/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}h1,h2,h3,h4,p{margin:0;padding:0;line-height:1}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 2.5rem}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 .125rem;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}.about{visibility:hidden;opacity:0;-webkit-transition:all ease .5s;transition:all ease .5s;background-image:url(img/about-visual.png);background-repeat:no-repeat;background-position:right;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media screen and (max-width:480px){.about{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}}.about__title{margin-bottom:3.125rem;display:inline}@media screen and (max-width:480px){.about__title{text-align:center;margin-top:1.25rem;margin-bottom:1.25rem}}.about__btn{text-decoration:none;color:#fff;width:5.3125rem;margin-bottom:3.75rem;text-transform:uppercase;position:relative}@media screen and (max-width:480px){.about__btn{margin-bottom:.625rem}}.about__btn:before{content:'‚ûù';position:absolute;right:0;-webkit-transition:all ease .3s;transition:all ease .3s}.about__btn:hover::before{right:-.625rem}.about__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;list-style:none;margin:0;padding:0}@media screen and (max-width:480px){.about__list{height:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:distribute;justify-content:space-around;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.about__item{position:relative;width:11.25rem;height:6.25rem;-webkit-box-shadow:0 0 .9375rem .3125rem #0f33ff;box-shadow:0 0 .9375rem .3125rem #0f33ff;border-radius:.3125rem;margin-right:2.5rem}@media screen and (max-width:480px){.about__item{width:12.5rem;height:7.5rem;margin-right:0}}@media screen and (max-width:380px){.about__item{width:12.5rem;height:7.5rem;margin-right:0}}.about__item_img{height:100%;width:100%;-o-object-fit:none;object-fit:none;border-radius:.3125rem}.about__item::before{position:absolute;bottom:-1.125rem;left:.625rem;text-transform:uppercase}.about__item:nth-child(1)::before{content:'winners'}.about__item:nth-child(2)::before{content:'philosophy'}.about__item:nth-child(3)::before{content:'history'}.contact{background-image:url(img/contact-visual.png);background-position:center;background-repeat:no-repeat;background-size:cover;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.contact__block{width:19.375rem;height:25rem;background-color:rgba(0,0,0,.3);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around;font-weight:700}@media screen and (max-width:480px){.contact__block{width:100%;height:70%;-ms-flex-pack:distribute;justify-content:space-around;background:0 0}}.contact__btn{display:block;width:9.375rem;padding:.625rem 0;text-align:center;border-radius:.625rem}@media screen and (max-width:480px){.contact__btn{width:15.625rem;padding:.9375rem 0}}.contact__btn--blue{background-color:#1769ff}.contact__btn--blue:hover{background-color:#6769ff}.contact__btn--pink{background-color:#ea4c89}.contact__btn--pink:hover{background-color:#ff7dab}.contact__btn--darkblue{background-color:#0f33ff}.contact__btn--darkblue:hover{background-color:#1547a5}.device_view--active{-webkit-transform:translateZ(-300px) rotateY(38deg);transform:translateZ(-300px) rotateY(38deg);-webkit-transition:all ease .5s;transition:all ease .5s;border-radius:1.25rem;-webkit-box-shadow:0 0 2.8125rem 1.5625rem #0f33ff;box-shadow:0 0 2.8125rem 1.5625rem #0f33ff}.device_view_window{display:none;z-index:100;position:absolute;background-color:#fff;opacity:0;left:0;top:0;bottom:0;right:0}.device_view_window--active{display:block}.header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:2.5rem;max-width:68.75rem;width:100%}.header .logo{text-decoration:none;color:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header .logo__text{text-transform:uppercase;font-weight:600;margin-left:.625rem}.header__form_btn{text-decoration:none;color:#fff;text-transform:uppercase;cursor:pointer;padding:.3125rem .9375rem;background-color:#0f33ff;border-radius:.3125rem}@media screen and (max-width:480px){.header__form_btn{margin-right:3.75rem}}.header__form_btn:hover{padding:.3125rem .75rem;background-color:#102bc5}.header__form_btn:active{padding:.3125rem .75rem;background-color:#162a9b}.header__hamburger{height:1.3125rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer}.header__hamburger span{position:relative;width:2.5rem;border-radius:.125rem;height:.1875rem;background-color:#fff}.header__hamburger span:nth-child(2){width:1.875rem}.hire_us{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-transition:all ease .5s;transition:all ease .5s}.hire_us__title{margin-bottom:3%;font-size:1.875rem}@media screen and (max-width:768px){.hire_us__title{margin-bottom:7%}}.hire_us .form{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.hire_us .form__row{margin-bottom:3.75rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media screen and (max-width:480px){.hire_us .form__row{-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:0}.hire_us .form__row:nth-child(2) .form__btn:first-child{margin-right:1.25rem}}.hire_us .form__row .form__btn:last-child{margin-right:0}.hire_us .form__btn{display:block;cursor:pointer;border:1px solid #fff;border-radius:.3125rem;margin-right:1.875rem;padding:.625rem 0;width:10rem;text-align:center}.hire_us .form__btn--active{background-color:#0f33ff;border-color:#0f33ff}@media screen and (max-width:480px){.hire_us .form__btn{margin-top:1.25rem;margin-bottom:1.25rem}.hire_us .form__btn:nth-child(1){margin-right:0}.hire_us .form__btn:nth-child(2){margin-right:0}}.hire_us .form__btn .checkbox{position:relative}.hire_us .form__btn .checkbox--active::before{position:absolute;top:-1rem;left:-.75rem;content:"‚úî";width:.625rem;height:.625rem}.hire_us .form__field{background-color:#000;font-size:1.5rem;color:#fff;border:none;border-bottom:.125rem solid #fff;width:45%}@media screen and (max-width:480px){.hire_us .form__field{width:35%}}.hire_us .form__field::-webkit-input-placeholder{color:#fff}.hire_us .form__field::-moz-placeholder{color:#fff}.hire_us .form__field:-moz-placeholder{color:#fff}.hire_us .form__field:-ms-input-placeholder{color:#fff}.hire_us .form__submit{background-color:#0f33ff;border:none;text-transform:uppercase;font-weight:700;width:18.75rem;padding:.625rem 0;border-radius:.3125rem}@media screen and (max-width:480px){.hire_us .form__submit{margin-top:1.25rem}}.hire_us .form__submit:hover{width:18.4375rem;background-color:#102bc5}.hire_us .form__submit:active{width:18.125rem;background-color:#162a9b}.outer{width:50%;-webkit-transition:all ease .4s;transition:all ease .4s}.outer__nav{list-style:none;margin:0;padding:0;font-size:2.375rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-weight:600}.outer__item{margin-top:1.875rem}.outer__item--active{text-decoration:line-through}.outer__link{text-decoration:none;color:#fff}.outer--active{display:-webkit-box;display:-ms-flexbox;display:flex}.paginator{z-index:10;width:8.125rem;height:95%;-ms-flex-item-align:center;align-self:center}@media screen and (max-width:768px){.paginator{display:none}}.paginator__list{list-style:none;margin:0;padding:0;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;height:100%}.paginator__list::before{position:absolute;left:3.125rem;top:1.5%;content:'';width:.1875rem;background-color:#282828;height:97%}.paginator__link{text-decoration:none;color:#fff;color:#282828;position:relative;display:none}.paginator__item{cursor:pointer;width:5rem;position:relative;padding-left:1.25rem;height:1.25rem}.paginator__item:hover::after{-webkit-transition:all ease .4s;transition:all ease .4s;color:#fff}.paginator__item::before{content:'';position:absolute;left:.125rem;width:.375rem;height:.375rem;border-radius:50%;background-color:#fff;top:50%;-webkit-transform:translatey(-50%);transform:translatey(-50%)}.paginator__item::after{width:1.875rem;position:absolute;color:#282828;left:1.25rem}.paginator__item:nth-child(1)::after{content:"01"}.paginator__item:nth-child(2)::after{content:"02"}.paginator__item:nth-child(3)::after{content:"03"}.paginator__item:nth-child(4)::after{content:"04"}.paginator__item:nth-child(5)::after{content:"05"}.paginator__item--active:nth-child(1)::after{color:#fff;left:-1.875rem;top:0}.paginator__item--active:nth-child(2)::after{color:#fff;left:-1.875rem;top:0}.paginator__item--active:nth-child(3)::after{color:#fff;left:-1.875rem;top:0}.paginator__item--active:nth-child(4)::after{color:#fff;left:-1.875rem;top:0}.paginator__item--active:nth-child(5)::after{color:#fff;left:-1.875rem;top:0}.paginator__item--active::before{background-color:#0f33ff}.paginator__item--active .paginator__link{color:#fff;display:inline}.section_home{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media screen and (max-width:768px){.section_home{width:95%}}.section_home .top_content{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;position:relative;border-bottom:.125rem solid #282828}.section_home .top_content::before{content:'';width:1.875rem;height:.625rem;display:block;position:absolute;background-color:#0f33ff;border-radius:25%;bottom:-.625rem;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.section_home .top_content .left_side{width:50%;margin-bottom:2.5rem}.section_home .top_content .right_side{width:50%;position:relative}.section_home .top_content .right_side .top_content__image{position:absolute;bottom:0;width:100%}.section_home .top_content__title{margin-top:2.5rem;margin-bottom:2.5rem;display:block;width:50%}@media screen and (max-width:768px){.section_home .top_content__title{font-size:2.5rem}}.section_home .bottom_content__list{list-style:none;margin:0;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media screen and (max-width:768px){.section_home .bottom_content__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-top:.625rem}}.section_home .bottom_content .list__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#282828;-webkit-transition:all ease .3s;transition:all ease .3s}@media screen and (max-width:768px){.section_home .bottom_content .list__item{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;margin-bottom:.625rem}}.section_home .bottom_content .list__item:hover{color:#fff}.section_home .bottom_content .list__item .item__title{text-transform:uppercase;font-size:1.125rem;font-weight:700;text-align:center}.section_home .bottom_content .list__item .item__description{text-align:center;margin-top:.625rem;line-height:1.42}@media screen and (max-width:768px){.section_home .bottom_content .list__item .item__description{margin-top:.3125rem}}.title{font-size:3.125rem;font-weight:600}@media screen and (max-width:480px){.title{font-size:2.5rem}}.btn_hire{text-decoration:none;color:#fff;text-transform:uppercase;position:relative;padding:.5rem .625rem}.btn_hire::before{content:'';position:absolute;top:0;right:0;width:75%;height:100%;background-color:#0f33ff;border-radius:.3125rem;z-index:-1;-webkit-transition:all ease .3s;transition:all ease .3s}.btn_hire:hover::before{width:100%}.section_slider{position:absolute;left:14%;visibility:hidden;opacity:0;-webkit-transition:all ease .5s;transition:all ease .5s;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:100%;width:80%}@media screen and (max-width:768px){.section_slider{width:100%;left:0}}.section_slider .arrow{width:3.4375rem;height:3.125rem;border-radius:50%;background-color:#555;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-transition:all ease .3s;transition:all ease .3s}.section_slider .arrow__image{width:1.5625rem;height:1.875rem}.section_slider .arrow:hover{background-color:#999}.section_slider .slider{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:90%;height:100%}.section_slider .slider__title{font-size:1.875rem;margin-top:-15%;margin-bottom:15%}.section_slider .slider__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around;list-style:none;margin:0;padding:0}.section_slider .slider__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#282828}@media screen and (max-width:480px){.section_slider .slider__item{display:none}}.section_slider .slider__item .item__title{text-align:center;text-transform:uppercase;font-weight:700;font-size:1.125rem;margin-top:.625rem;margin-bottom:.625rem}.section_slider .slider__item .item__description{display:none;text-align:center;line-height:1.42}.section_slider .slider__item--active{color:#fff}@media screen and (max-width:480px){.section_slider .slider__item--active{display:-webkit-box;display:-ms-flexbox;display:flex}}.section_slider .slider__item--active .item__title{font-size:1.375rem;text-align:center}.section_slider .slider__item--active .item__description{display:block}.section_slider .slider__img{border-radius:50%;width:70%;height:70%}html{height:100%;margin:0;padding:0;font-size:1rem;color:#fff;line-height:1.42;font-family:Ubuntu}@media screen and (max-width:900px){html{font-size:.9375rem}}@media screen and (max-width:768px){html{font-size:.875rem}}*{-webkit-box-sizing:border-box;box-sizing:border-box}body{font-family:Montserrat;height:100%;background-color:#0b0b0b}.container{max-width:68.75rem;width:100%;margin:0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;height:100%;position:relative}.device_view{position:relative;width:100%;min-height:40.625rem;height:100%;overflow:hidden;padding:1.875rem 2.5rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}@media screen and (max-width:768px){.device_view{padding:.9375rem 0}}.wrapper{-webkit-perspective:31.25rem;perspective:31.25rem;position:relative;width:100%;min-height:40.625rem;height:100%;overflow:hidden;padding:1.875rem 2.5rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media screen and (max-width:768px){.wrapper{min-height:auto;padding:.9375rem}}.section{visibility:hidden;opacity:0;-webkit-transition:all ease .5s;transition:all ease .5s;position:absolute;left:18%;height:100%;margin:0 auto;width:80%}@media screen and (max-width:768px){.section{left:0;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;min-height:auto;width:95%}}.one-page-scroll{height:100%;-webkit-transition:-webkit-transform 1s;transition:-webkit-transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s}.visually-hidden{position:absolute;clip:rect(0 0 0 0);width:1px;height:1px;margin:-1px;-webkit-transition:all ease .5s;transition:all ease .5s}.decoration{z-index:10;position:absolute}.section--active{visibility:visible;opacity:1}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
